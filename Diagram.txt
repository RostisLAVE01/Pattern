class Student{
id: Int
surname: String
name: String
patronymic: String?
phone: String?
telegram: String?
email: String?
git: String?

-validateGit(): Boolean
-validateContact(): Boolean
+validate(): Boolean
+setContacts(String?,String?,String?):
+toString(): String
Student(String,String,String,String?,String?,String?,String?)
Student(String,String)
Student(HashMap<String,Any?>)
Student(String)
}

class Student_super{
Id: Int
git: String?
}

class Student_Short{
id: Int,
surnameIN: String?,
git: String?,
contact: String?
Student_Short(Int,String)
Student_Short(Student)
+toString(): String
}

class DataTable{
+GetNumCol
+GetNumRow
+GetElem
+toString
}

class Datalist<T>{
+select(num:Int)
+get_selected(List<Int>)
+get_names(Array<String>)
+get_data(List<Any>)
}

class Data_list_student_short{
+get_names(Array<String>)
+get_data(List<Any>)
}

class Student_Manager {
  + writeToFile(String)
  + readFromFile(String)
   strategy: StudentListStrategy
}
class Students_list_JSON {
  + writeToFile(String)
  + readFromFile(String)
}
interface StudentStrategy << interface >> {
  + writeToFile(String)
  + readFromFile(String)
   students:MutableList<Student>
}
class Students_list_super {
  + get_k_n_student_short_list(Int, Int,List<Student_Short>)
  + sortFIO(List<Student_Short>):
  + addStudent( String, String, String?, String?, String?,String?, String?)
  + repStudId(Int, String, String, String?, String?, String?,String?, String?)
  + removeStudent(Int)
  + getStudentCount(): Int
  + getStudentById(Int): Student?
}
class Student_list_txt {
  + writeToFile(String)
  + readFromFile(String)
}
class Students_list_YAML {
  + readFromFile(String)
  + writeToFile(String)
}

class Students_list_DB {
  + getStudentById(Int)
  + get_k_n_student_short_list(k: Int, n: Int): MutableList<Student_Short>
  + addStudent(Student)
  + updateStudent(Student)
  + deleteStudent(Int):
  + getStudentCount(): Int
  + addStudent(Student): Init
  + deleteStudent(Int): Init
}

class StudentList {
  + getStudentById(id: Int): Student?
  + get_k_n_student_short_list(k: Int, n: Int): MutableList<Student_Short>
  + addStudent(student: Student): Boolean
  + updateStudent(student: Student): Boolean
  + deleteStudent(studentId: Int): Boolean
    getStudentCount(): Int
}